{
  "name": "Testing a very simple smart contract over RPC",
  "givens": [
    {
      "name": "Default",
      "whens": [],
      "thens": [
        {
          "name": "Get: [object Object]"
        }
      ]
    },
    {
      "name": "Default",
      "whens": [
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        }
      ],
      "thens": [
        {
          "name": "Get: [object Object]",
          "error": true
        }
      ],
      "errors": {
        "name": "AssertionError",
        "message": "expected 44 to equal 4",
        "showDiff": true,
        "actual": 44,
        "expected": 4,
        "operator": "strictEqual",
        "stack": "AssertionError: expected 44 to equal 4\n    at Then.thenCB (/Users/adam/Code/kokomoBay/dist/tests/solidity/MyFirstContract.solidity-rpc.test.js:150:93)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Then.test (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:255:16)\n    at async Given.give (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:164:19)\n    at async givenThat.run (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:63:24)\n    at async /Users/adam/Code/kokomoBay/node_modules/testeranto/src/lib/Scheduler.ts:266:17"
      }
    },
    {
      "name": "Default",
      "whens": [
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Decrement: 1"
        }
      ],
      "thens": [
        {
          "name": "Get: [object Object]"
        }
      ]
    },
    {
      "name": "Default",
      "whens": [
        {
          "name": "Decrement: 1"
        },
        {
          "name": "Decrement: 1"
        },
        {
          "name": "Decrement: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        }
      ],
      "thens": [
        {
          "name": "Get: [object Object]"
        }
      ]
    }
  ],
  "fails": [
    {
      "artifactSaver": {},
      "name": "Default",
      "features": [
        {
          "name": "hello"
        }
      ],
      "whens": [
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        },
        {
          "name": "Increment: 1"
        }
      ],
      "thens": [
        {
          "name": "Get: [object Object]",
          "error": true
        }
      ],
      "testArtifacts": {},
      "initialValues": "MyFirstContract.sol",
      "store": {
        "contractNearSide": {
          "currentProvider": {
            "debug": {
              "enabled": false
            }
          },
          "_requestManager": {
            "provider": {
              "debug": {
                "enabled": false
              }
            },
            "providers": {},
            "subscriptions": {}
          },
          "givenProvider": null,
          "providers": {},
          "_provider": {
            "debug": {
              "enabled": false
            }
          },
          "options": {
            "address": "0x583B9624A3541B93D24AEA37BD02cD56EA81B875",
            "jsonInterface": [
              {
                "constant": true,
                "inputs": [],
                "name": "count",
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function",
                "signature": "0x06661abd"
              },
              {
                "constant": true,
                "inputs": [],
                "name": "get",
                "outputs": [
                  {
                    "name": "",
                    "type": "uint256"
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function",
                "signature": "0x6d4ce63c"
              },
              {
                "constant": false,
                "inputs": [],
                "name": "inc",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function",
                "signature": "0x371303c0"
              },
              {
                "constant": false,
                "inputs": [],
                "name": "dec",
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "type": "function",
                "signature": "0xb3bcfa82"
              }
            ]
          },
          "handleRevert": false,
          "transactionPollingTimeout": 750,
          "transactionPollingInterval": 1000,
          "transactionConfirmationBlocks": 24,
          "transactionBlockTimeout": 50,
          "blockHeaderTimeout": 10,
          "defaultAccount": null,
          "defaultBlock": "latest",
          "methods": {},
          "events": {},
          "_address": "0x583B9624A3541B93D24AEA37BD02cD56EA81B875",
          "_jsonInterface": [
            {
              "constant": true,
              "inputs": [],
              "name": "count",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function",
              "signature": "0x06661abd"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "get",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function",
              "signature": "0x6d4ce63c"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "inc",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function",
              "signature": "0x371303c0"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "dec",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function",
              "signature": "0xb3bcfa82"
            }
          ]
        },
        "contractFarSide": {
          "interface": {
            "fragments": [
              {
                "type": "function",
                "name": "count",
                "constant": true,
                "inputs": [],
                "outputs": [
                  {
                    "name": null,
                    "type": "uint256",
                    "indexed": null,
                    "components": null,
                    "arrayLength": null,
                    "arrayChildren": null,
                    "baseType": "uint256",
                    "_isParamType": true
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "gas": null,
                "_isFragment": true
              },
              {
                "type": "function",
                "name": "get",
                "constant": true,
                "inputs": [],
                "outputs": [
                  {
                    "name": null,
                    "type": "uint256",
                    "indexed": null,
                    "components": null,
                    "arrayLength": null,
                    "arrayChildren": null,
                    "baseType": "uint256",
                    "_isParamType": true
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "gas": null,
                "_isFragment": true
              },
              {
                "type": "function",
                "name": "inc",
                "constant": false,
                "inputs": [],
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "gas": null,
                "_isFragment": true
              },
              {
                "type": "function",
                "name": "dec",
                "constant": false,
                "inputs": [],
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "gas": null,
                "_isFragment": true
              }
            ],
            "_abiCoder": {
              "coerceFunc": null
            },
            "functions": {
              "count()": {
                "type": "function",
                "name": "count",
                "constant": true,
                "inputs": [],
                "outputs": [
                  {
                    "name": null,
                    "type": "uint256",
                    "indexed": null,
                    "components": null,
                    "arrayLength": null,
                    "arrayChildren": null,
                    "baseType": "uint256",
                    "_isParamType": true
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "gas": null,
                "_isFragment": true
              },
              "get()": {
                "type": "function",
                "name": "get",
                "constant": true,
                "inputs": [],
                "outputs": [
                  {
                    "name": null,
                    "type": "uint256",
                    "indexed": null,
                    "components": null,
                    "arrayLength": null,
                    "arrayChildren": null,
                    "baseType": "uint256",
                    "_isParamType": true
                  }
                ],
                "payable": false,
                "stateMutability": "view",
                "gas": null,
                "_isFragment": true
              },
              "inc()": {
                "type": "function",
                "name": "inc",
                "constant": false,
                "inputs": [],
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "gas": null,
                "_isFragment": true
              },
              "dec()": {
                "type": "function",
                "name": "dec",
                "constant": false,
                "inputs": [],
                "outputs": [],
                "payable": false,
                "stateMutability": "nonpayable",
                "gas": null,
                "_isFragment": true
              }
            },
            "errors": {},
            "events": {},
            "structs": {},
            "deploy": {
              "name": null,
              "type": "constructor",
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "gas": null,
              "_isFragment": true
            },
            "_isInterface": true
          },
          "provider": {
            "_isProvider": true,
            "_events": [],
            "_emitted": {
              "block": -2
            },
            "disableCcipRead": false,
            "formatter": {
              "formats": {
                "transaction": {},
                "transactionRequest": {},
                "receiptLog": {},
                "receipt": {},
                "block": {},
                "blockWithTransactions": {},
                "filter": {},
                "filterLog": {}
              }
            },
            "anyNetwork": false,
            "_networkPromise": {},
            "_maxInternalBlockNumber": 1,
            "_lastBlockNumber": -2,
            "_maxFilterBlockRange": 10,
            "_pollingInterval": 4000,
            "_fastQueryDate": 1673490134336,
            "connection": {
              "url": "http://localhost:3002"
            },
            "_nextId": 75,
            "_eventLoopCache": {
              "detectNetwork": null,
              "eth_chainId": null,
              "eth_blockNumber": null
            },
            "_network": {
              "chainId": 1337,
              "name": "unknown"
            },
            "_internalBlockNumber": {},
            "_fastBlockNumber": 1,
            "_fastBlockNumberPromise": {}
          },
          "signer": {
            "_isSigner": true,
            "address": "0x026577576543fb2Adff7De5E0875b821d65f0836",
            "provider": {
              "_isProvider": true,
              "_events": [],
              "_emitted": {
                "block": -2
              },
              "disableCcipRead": false,
              "formatter": {
                "formats": {
                  "transaction": {},
                  "transactionRequest": {},
                  "receiptLog": {},
                  "receipt": {},
                  "block": {},
                  "blockWithTransactions": {},
                  "filter": {},
                  "filterLog": {}
                }
              },
              "anyNetwork": false,
              "_networkPromise": {},
              "_maxInternalBlockNumber": 1,
              "_lastBlockNumber": -2,
              "_maxFilterBlockRange": 10,
              "_pollingInterval": 4000,
              "_fastQueryDate": 1673490134336,
              "connection": {
                "url": "http://localhost:3002"
              },
              "_nextId": 75,
              "_eventLoopCache": {
                "detectNetwork": null,
                "eth_chainId": null,
                "eth_blockNumber": null
              },
              "_network": {
                "chainId": 1337,
                "name": "unknown"
              },
              "_internalBlockNumber": {},
              "_fastBlockNumber": 1,
              "_fastBlockNumberPromise": {}
            }
          },
          "callStatic": {},
          "estimateGas": {},
          "functions": {},
          "populateTransaction": {},
          "filters": {},
          "_runningEvents": {},
          "_wrappedEmits": {},
          "address": "0x583B9624A3541B93D24AEA37BD02cD56EA81B875",
          "resolvedAddress": {}
        },
        "accounts": [
          "0x3c87a8f2775a0c8b419d13e073173315ae97753a",
          "0x026577576543fb2adff7de5e0875b821d65f0836",
          "0x4bb944901b118d6319a6cce222e631f45c7939f6",
          "0x37aeb72b9c5d788a9707884f313e24c2662ec86c",
          "0x515a63b25f21f08fa73de41ee9df11d88640e0ea",
          "0xe9b1723991a6b6229ae2d8431167c83532f2e28e",
          "0x208f5a0d63b67dc057c2ba75ad00563375adf5a0",
          "0x603fd05ecbca774433cd8b26a38f95153a49daff",
          "0xa4b785bd3b54c80b8805dee6e98f70c5b79e1412",
          "0xffde705d911c5c79541379bc99c656a1a66224d8"
        ],
        "server": {
          "debug": {
            "enabled": false
          }
        }
      },
      "error": {
        "name": "AssertionError",
        "message": "expected 44 to equal 4",
        "showDiff": true,
        "actual": 44,
        "expected": 4,
        "operator": "strictEqual",
        "stack": "AssertionError: expected 44 to equal 4\n    at Then.thenCB (/Users/adam/Code/kokomoBay/dist/tests/solidity/MyFirstContract.solidity-rpc.test.js:150:93)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Then.test (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:255:16)\n    at async Given.give (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:164:19)\n    at async givenThat.run (/Users/adam/Code/kokomoBay/node_modules/testeranto/src/BaseClasses.ts:63:24)\n    at async /Users/adam/Code/kokomoBay/node_modules/testeranto/src/lib/Scheduler.ts:266:17"
      }
    }
  ]
}