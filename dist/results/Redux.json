{
  "test": {
    "name": "Testing the Redux store",
    "givens": [
      {
        "name": "BDD gherkin style",
        "features": [
          {
            "name": "hello"
          }
        ],
        "whens": [
          {
            "name": "TheEmailIsSetTo: adam@email.com"
          }
        ],
        "thens": [
          {
            "name": "TheEmailIs: adam@email.com"
          }
        ],
        "initialValues": {
          "password": "",
          "email": "",
          "error": "no_error"
        },
        "store": {}
      },
      {
        "name": "another feature",
        "features": [
          {
            "name": "hello"
          }
        ],
        "whens": [],
        "thens": [
          {
            "name": "TheEmailIsNot: adam@email.com"
          },
          {
            "name": "TheEmailIs: bob@mail.com"
          }
        ],
        "initialValues": {
          "password": "",
          "email": "bob@mail.com",
          "error": "no_error"
        },
        "store": {}
      },
      {
        "name": "yet another feature",
        "features": [
          {
            "name": "hello"
          }
        ],
        "whens": [
          {
            "name": "TheEmailIsSetTo: hello"
          },
          {
            "name": "TheEmailIsSetTo: aloha"
          }
        ],
        "thens": [
          {
            "name": "TheEmailIs: aloha"
          }
        ],
        "initialValues": {
          "password": "",
          "email": "",
          "error": "no_error"
        },
        "store": {}
      },
      {
        "name": "OMG a feature!",
        "features": [
          {
            "name": "aloha"
          },
          {
            "name": "hello"
          }
        ],
        "whens": [],
        "thens": [
          {
            "name": "TheEmailIs: "
          }
        ],
        "initialValues": {
          "password": "",
          "email": "",
          "error": "no_error"
        },
        "store": {}
      },
      {
        "name": "yes more features plz",
        "features": [
          {
            "name": "aloha"
          },
          {
            "name": "hello"
          }
        ],
        "whens": [
          {
            "name": "TheEmailIsSetTo: hey there"
          }
        ],
        "thens": [
          {
            "name": "TheEmailIs: hey there?",
            "error": true
          }
        ],
        "initialValues": {
          "password": "",
          "email": "",
          "error": "no_error"
        },
        "store": {},
        "error": {
          "name": "AssertionError",
          "message": "expected 'hey there' to equal 'hey there?'",
          "showDiff": true,
          "actual": "hey there",
          "expected": "hey there?",
          "operator": "strictEqual",
          "stack": "AssertionError: expected 'hey there' to equal 'hey there?'\n    at Then.thenCB (/Users/adam/Code/testeranto.ts/dist/tests/Redux+Reselect+React/app.redux.test.js:1:673)\n    at Then.test (/Users/adam/Code/testeranto.ts/src/BaseClasses.ts:189:21)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Given.give (/Users/adam/Code/testeranto.ts/src/BaseClasses.ts:120:19)\n    at async constructor.run (/Users/adam/Code/testeranto.ts/src/BaseClasses.ts:52:24)\n    at async /Users/adam/Code/testeranto.ts/src/watch.ts:78:17"
        }
      }
    ],
    "checks": [],
    "store": {}
  },
  "status": false
}