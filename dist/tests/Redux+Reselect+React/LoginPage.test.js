import{ReactTesteranto as r}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./react.testeranto.test.ts";import{assert as a}from"chai";import i from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./LoginPage.tsx";import{features as l}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/../testerantoFeatures.test.ts";var m=l.hello,T=r({Suites:{Default:"a default suite"},Givens:{default:()=>({})},Whens:{TheLoginIsSubmitted:()=>e=>e.root.findByType("button").props.onClick(),TheEmailIsSetTo:e=>t=>t.root.findByProps({type:"email"}).props.onChange({target:{value:e}}),ThePasswordIsSetTo:e=>t=>t.root.findByProps({type:"password"}).props.onChange({target:{value:e}})},Thens:{TheEmailIs:e=>t=>{a.equal(t.root.findByProps({type:"email"}).props.value,e)},TheEmailIsNot:e=>t=>a.notEqual(t.root.findByProps({type:"email"}).props.value,e),ThePasswordIs:e=>t=>a.equal(t.root.findByProps({type:"password"}).props.value,e),ThePasswordIsNot:e=>t=>a.notEqual(t.root.findByProps({type:"password"}).props.value,e),ThereIsAnEmailError:()=>e=>a.notEqual(e.root.findByProps({type:"password"}).props.value,"password"),ThereIsNotAnEmailError:()=>e=>a.notEqual(e.root.findByProps({type:"password"}).props.value,"password")},Checks:{AnEmptyState:()=>({})}},(e,t,o,s,p)=>[e.Default("Testing the LoginPage as react",[t.default("Set the email and check the email",[m],[o.TheEmailIsSetTo("adam@email.com")],[s.TheEmailIs("adam@email.com")]),t.default("Set the email by initial state, then set the email normally, and then check some other stuff",[],[o.TheEmailIsSetTo("adam@email.com"),o.ThePasswordIsSetTo("secret")],[s.TheEmailIsNot("wade@rpc"),s.TheEmailIs("adam@email.com"),s.ThePasswordIs("secret"),s.ThePasswordIsNot("idk")]),t.default("Don't show an email error just because the email does not validate",[],[o.TheEmailIsSetTo("adam")],[s.ThereIsNotAnEmailError()]),t.default("Do show an email error after submitting",[],[o.TheEmailIsSetTo("adam"),o.TheLoginIsSubmitted()],[s.ThereIsNotAnEmailError()])],[])],i,__filename);export{T as AppReactTesteranto};
