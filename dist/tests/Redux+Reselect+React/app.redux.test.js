import{assert as l}from"chai";import{features as a}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/../testerantoFeatures.test.ts";import{ReduxTesteranto as m}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./redux.testeranto.test.ts";import{loginApp as s}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./app.ts";var S=m({Suites:{Default:"some default Suite"},Givens:{AnEmptyState:()=>s.getInitialState(),AStateWithEmail:t=>({...s.getInitialState(),email:t})},Whens:{TheLoginIsSubmitted:()=>()=>[s.actions.signIn],TheEmailIsSetTo:t=>()=>[s.actions.setEmail,t],ThePasswordIsSetTo:t=>()=>[s.actions.setPassword,t]},Thens:{TheEmailIs:t=>e=>l.equal(e.email,t),TheEmailIsNot:t=>e=>l.notEqual(e.email,t),ThePasswordIs:t=>e=>l.equal(e.password,t),ThePasswordIsNot:t=>e=>l.notEqual(e.password,t)},Checks:{AnEmptyState:()=>s.getInitialState()}},(t,e,i,o,r)=>[t.Default("Testing the Redux store",[e.AnEmptyState("BDD gherkin style",[a.hello],[i.TheEmailIsSetTo("adam@email.com")],[o.TheEmailIs("adam@email.com")]),e.AStateWithEmail("another feature",[a.hello],[],[o.TheEmailIsNot("adam@email.com"),o.TheEmailIs("bob@mail.com")],"bob@mail.com"),e.AnEmptyState("yet another feature",[a.hello],[i.TheEmailIsSetTo("hello"),i.TheEmailIsSetTo("aloha")],[o.TheEmailIs("aloha")]),e.AnEmptyState("OMG a feature!",[a.aloha,a.hello],[],[o.TheEmailIs("")]),e.AnEmptyState("yes more features plz",[a.aloha,a.hello],[i.TheEmailIsSetTo("hey there")],[o.TheEmailIs("hey there")])],[])],s.reducer,__filename);export{S as AppReduxTesteranto};
