import{assert as i}from"chai";import{ReduxToolkitTesteranto as h}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./reduxToolkit.testeranto.test.ts";import{loginApp as a}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./app.ts";import S from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/./app.ts";import{features as p}from"/Users/adam/Code/testeranto.ts/tests/Redux+Reselect+React/../testerantoFeatures.test.ts";var r=S(),T=r.select.loginPageSelection,w=r.app.actions,c=r.app.reducer,A=p.hello,P=h({Suites:{Default:"some default Suite"},Givens:{AnEmptyState:()=>a.getInitialState(),AStateWithEmail:t=>({...a.getInitialState(),email:t})},Whens:{TheLoginIsSubmitted:()=>()=>[a.actions.signIn],TheEmailIsSetTo:t=>()=>[a.actions.setEmail,t],ThePasswordIsSetTo:t=>()=>[a.actions.setPassword,t]},Thens:{TheEmailIs:t=>e=>[i.equal,e.email,t,"a nice message"],TheEmailIsNot:t=>e=>[i.notEqual,e.email,t],ThePasswordIs:t=>e=>[i.equal,e.password,t],ThePasswordIsNot:t=>e=>[i.notEqual,e.password,t]},Checks:{AnEmptyState:()=>a.getInitialState()}},(t,e,o,s,n)=>[t.Default("Testing the ReduxToolkit",[e.AnEmptyState("BDD gherkin style",[],[o.TheEmailIsSetTo("adam@email.com")],[s.TheEmailIs("adam@email.com")]),e.AStateWithEmail("another feature",[],[o.TheEmailIsSetTo("hello")],[s.TheEmailIsNot("adam@email.com")],"bob@mail.com"),e.AnEmptyState("yet another feature",[],[o.TheEmailIsSetTo("hello"),o.TheEmailIsSetTo("aloha")],[s.TheEmailIs("aloha")]),e.AnEmptyState("OMG a feature!",[],[],[s.TheEmailIs("")])],[n.AnEmptyState("imperative style",[],async({TheEmailIsSetTo:m},{TheEmailIs:l})=>{await m("foo"),await l("foo");let u=await m("foobar");await l("foobar")})])],{reducer:c,selector:T},__filename);export{P as AppReduxToolkitTesteranto};
