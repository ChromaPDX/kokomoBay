{
  "contractName": "IDelayedReveal",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "name": "TokenURIRevealed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "identifier",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "reveal",
      "outputs": [
        {
          "internalType": "string",
          "name": "revealedURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "encryptDecrypt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"name\":\"TokenURIRevealed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"encryptDecrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"reveal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"revealedURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TokenURIRevealed(uint256,string)\":{\"details\":\"Emitted when tokens are revealed.\"}},\"kind\":\"dev\",\"methods\":{\"encryptDecrypt(bytes,bytes)\":{\"params\":{\"data\":\"The data to encrypt. In the case of delayed-reveal NFTs, this is the \\\"revealed\\\" state              base URI of the relevant batch of NFTs.\",\"key\":\"The key with which to encrypt data\"}},\"reveal(uint256,bytes)\":{\"params\":{\"identifier\":\"The ID for the batch of delayed-reveal NFTs to reveal.\",\"key\":\"The key with which the base URI for the relevant batch of NFTs was encrypted.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"encryptDecrypt(bytes,bytes)\":{\"notice\":\"Performs XOR encryption/decryption.\"},\"reveal(uint256,bytes)\":{\"notice\":\"Reveals a batch of delayed reveal NFTs.\"}},\"notice\":\"Thirdweb's `DelayedReveal` is a contract extension for base NFT contracts. It lets you create batches of  'delayed-reveal' NFTs. You can learn more about the usage of delayed reveal NFTs here - https://blog.thirdweb.com/delayed-reveal-nfts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/extension/interface/IDelayedReveal.sol\":\"IDelayedReveal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/interface/IDelayedReveal.sol\":{\"keccak256\":\"0x6fed5a60cec4a0a13edb51e91288880349af4d5f828f15e14a2e3ebcd4db11f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6822e62dd573165c9cba6fcec99f2372062261bdfcf4e9fbf984738c433a4b7d\",\"dweb:/ipfs/QmRHBCTYALXq3Y8tWN3jiwxbJ4mMBNJaT6wC129Z9spkKv\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n *  Thirdweb's `DelayedReveal` is a contract extension for base NFT contracts. It lets you create batches of\n *  'delayed-reveal' NFTs. You can learn more about the usage of delayed reveal NFTs here - https://blog.thirdweb.com/delayed-reveal-nfts\n */\n\ninterface IDelayedReveal {\n    /// @dev Emitted when tokens are revealed.\n    event TokenURIRevealed(uint256 indexed index, string revealedURI);\n\n    /**\n     *  @notice Reveals a batch of delayed reveal NFTs.\n     *\n     *  @param identifier The ID for the batch of delayed-reveal NFTs to reveal.\n     *\n     *  @param key        The key with which the base URI for the relevant batch of NFTs was encrypted.\n     */\n    function reveal(uint256 identifier, bytes calldata key) external returns (string memory revealedURI);\n\n    /**\n     *  @notice Performs XOR encryption/decryption.\n     *\n     *  @param data The data to encrypt. In the case of delayed-reveal NFTs, this is the \"revealed\" state\n     *              base URI of the relevant batch of NFTs.\n     *\n     *  @param key  The key with which to encrypt data\n     */\n    function encryptDecrypt(bytes memory data, bytes calldata key) external pure returns (bytes memory result);\n}\n",
  "sourcePath": "@thirdweb-dev/contracts/extension/interface/IDelayedReveal.sol",
  "ast": {
    "absolutePath": "@thirdweb-dev/contracts/extension/interface/IDelayedReveal.sol",
    "exportedSymbols": {
      "IDelayedReveal": [
        5687
      ]
    },
    "id": 5688,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5658,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:29"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDelayedReveal",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5659,
          "nodeType": "StructuredDocumentation",
          "src": "64:254:29",
          "text": "  Thirdweb's `DelayedReveal` is a contract extension for base NFT contracts. It lets you create batches of\n  'delayed-reveal' NFTs. You can learn more about the usage of delayed reveal NFTs here - https://blog.thirdweb.com/delayed-reveal-nfts"
        },
        "fullyImplemented": false,
        "id": 5687,
        "linearizedBaseContracts": [
          5687
        ],
        "name": "IDelayedReveal",
        "nameLocation": "330:14:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 5660,
              "nodeType": "StructuredDocumentation",
              "src": "351:42:29",
              "text": "@dev Emitted when tokens are revealed."
            },
            "eventSelector": "6df1d8db2a036436ffe0b2d1833f2c5f1e624818dfce2578c0faa4b83ef9998d",
            "id": 5666,
            "name": "TokenURIRevealed",
            "nameLocation": "404:16:29",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5662,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "437:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5666,
                  "src": "421:21:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5664,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "451:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5666,
                  "src": "444:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5663,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "420:43:29"
            },
            "src": "398:66:29"
          },
          {
            "documentation": {
              "id": 5667,
              "nodeType": "StructuredDocumentation",
              "src": "470:266:29",
              "text": "  @notice Reveals a batch of delayed reveal NFTs.\n  @param identifier The ID for the batch of delayed-reveal NFTs to reveal.\n  @param key        The key with which the base URI for the relevant batch of NFTs was encrypted."
            },
            "functionSelector": "ce805642",
            "id": 5676,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reveal",
            "nameLocation": "750:6:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5669,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "765:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5676,
                  "src": "757:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5671,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "792:3:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5676,
                  "src": "777:18:29",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5670,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "756:40:29"
            },
            "returnParameters": {
              "id": 5675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5674,
                  "mutability": "mutable",
                  "name": "revealedURI",
                  "nameLocation": "829:11:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5676,
                  "src": "815:25:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:27:29"
            },
            "scope": 5687,
            "src": "741:101:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5677,
              "nodeType": "StructuredDocumentation",
              "src": "848:298:29",
              "text": "  @notice Performs XOR encryption/decryption.\n  @param data The data to encrypt. In the case of delayed-reveal NFTs, this is the \"revealed\" state\n              base URI of the relevant batch of NFTs.\n  @param key  The key with which to encrypt data"
            },
            "functionSelector": "e7150322",
            "id": 5686,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "encryptDecrypt",
            "nameLocation": "1160:14:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5679,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1188:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "1175:17:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5678,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1175:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5681,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "1209:3:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "1194:18:29",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5680,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1174:39:29"
            },
            "returnParameters": {
              "id": 5685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5684,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1250:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 5686,
                  "src": "1237:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:21:29"
            },
            "scope": 5687,
            "src": "1151:107:29",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5688,
        "src": "320:940:29",
        "usedErrors": []
      }
    ],
    "src": "39:1222:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2023-01-20T23:46:14.586Z",
  "devdoc": {
    "events": {
      "TokenURIRevealed(uint256,string)": {
        "details": "Emitted when tokens are revealed."
      }
    },
    "kind": "dev",
    "methods": {
      "encryptDecrypt(bytes,bytes)": {
        "params": {
          "data": "The data to encrypt. In the case of delayed-reveal NFTs, this is the \"revealed\" state              base URI of the relevant batch of NFTs.",
          "key": "The key with which to encrypt data"
        }
      },
      "reveal(uint256,bytes)": {
        "params": {
          "identifier": "The ID for the batch of delayed-reveal NFTs to reveal.",
          "key": "The key with which the base URI for the relevant batch of NFTs was encrypted."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "encryptDecrypt(bytes,bytes)": {
        "notice": "Performs XOR encryption/decryption."
      },
      "reveal(uint256,bytes)": {
        "notice": "Reveals a batch of delayed reveal NFTs."
      }
    },
    "notice": "Thirdweb's `DelayedReveal` is a contract extension for base NFT contracts. It lets you create batches of  'delayed-reveal' NFTs. You can learn more about the usage of delayed reveal NFTs here - https://blog.thirdweb.com/delayed-reveal-nfts",
    "version": 1
  }
}